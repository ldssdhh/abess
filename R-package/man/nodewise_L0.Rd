% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abessgraph.R
\name{nodewise_L0}
\alias{nodewise_L0}
\title{Nodewise logistic regression for inverse Ising problem}
\usage{
nodewise_L0(
  x,
  max.support.size = NULL,
  tune.type = "cv",
  foldid = NULL,
  support.size = NULL,
  graph.threshold = 0
)
}
\arguments{
\item{x}{Input matrix, of dimension \eqn{n \times p}; each row is an observation
vector and each column is a predictor/feature/variable.
Can be in sparse matrix format (inherit from class \code{"dgCMatrix"} in package \code{Matrix}).}

\item{max.support.size}{}

\item{tune.type}{The type of criterion for choosing the support size.
Available options are \code{"gic"}, \code{"ebic"}, \code{"bic"}, \code{"aic"} and \code{"cv"}.
Default is \code{"gic"}.}

\item{support.size}{An integer vector representing the alternative support sizes.
Only used for \code{tune.path = "sequence"}. Default is \code{0:min(n, round(n/(log(log(n))log(p))))}.}
}
\value{

}
\description{
Nodewise logistic regression for inverse Ising problem
}
\examples{
p <- 16
n <- 1e5 / 2
library(abess)
train <- generate.bmn.freq.data(n, p, type = 10, graph.seed = 1, seed = 1)
res <- nodewise_L0(train[["data"]], tune.type = "gic", 
                   max.support.size = 4, support.size = rep(4, p))
all((res[[1]] != 0) == (train[["theta"]] != 0))

valid <- generate.bmn.freq.data(n, p, type = 10, graph.seed = 1, seed = 2)
all(train[["theta"]] == valid[["theta"]])
x <- rbind(train[["data"]], valid[["data"]])
res <- nodewise_L0(x, tune.type = "cv")
all((res[[1]] != 0) == (train[["theta"]] != 0))

}
